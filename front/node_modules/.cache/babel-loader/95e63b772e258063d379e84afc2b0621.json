{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\src\\\\stock\\\\Stock.js\";\nimport React, { Component } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport dispo from \"./img/checked.svg\";\nimport notdispo from \"./img/notchecked.svg\";\nimport modify from \"../newUser/img/edit.svg\";\nimport plus from \"../newUser/img/add.svg\";\nimport deleteimg from \"../newUser/img/rubbish-bin.svg\";\nimport './Stock.css';\nimport axios from 'axios';\nimport Validators from '../validators/validators';\nimport { Row, Col, Card, Table, Button, Badge, Modal, ModalBody, CustomInput, ModalHeader, Input, FormGroup, ModalFooter } from 'reactstrap';\nimport Vente from '../vente/Vente';\nimport utility from '../utility/utility';\n\nvar Stock =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stock, _Component);\n\n  function Stock(props) {\n    var _this;\n\n    _classCallCheck(this, Stock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stock).call(this, props));\n    _this.state = {\n      products: [],\n      productsView: [],\n      dataDoughnut: {},\n      optionDoughnut: {},\n      dataBar: {},\n      optionsBar: {},\n      categoriesSelect: [],\n      modalNewProduct: false,\n      modalEditProduct: false,\n      modalDeleteProduct: false,\n      modalWait: false,\n      currentProduct: {},\n      nomProduit: \"\",\n      prixAchat: \"\",\n      prixVente: \"\",\n      quantite: \"\",\n      disponible: \"\"\n    };\n    _this.createProduit = _this.createProduit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeCategorieProduct = _this.changeCategorieProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeShowProducts = _this.changeShowProducts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Stock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(process.env.REACT_APP_API_URL + '/stock/getProduits', {\n        headers: {\n          'authtoken': sessionStorage.getItem('token')\n        }\n      }).then(function (res) {\n        var products = res.data;\n\n        _this2.setState({\n          products: products\n        });\n\n        _this2.showProducts();\n\n        _this2.countCategories();\n\n        _this2.showProductsBar(\"categorie\");\n      });\n    }\n  }, {\n    key: \"showProducts\",\n    value: function showProducts(filter) {\n      var table = [];\n\n      if (Validators.isDefined(this.state.products.data)) {\n        for (var i = 0; i < Object.keys(this.state.products.data).length; i++) {\n          var product = this.state.products.data[i];\n          var dispoimg = product.disponible ? React.createElement(\"img\", {\n            src: dispo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }) : React.createElement(\"img\", {\n            src: notdispo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          });\n\n          if (!Validators.isDefined(filter) || filter == \"\") {\n            table.push(React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, \" \", product.nom, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, \" \", React.createElement(\"span\", {\n              style: {\n                backgroundColor: product.categorieProduit.colorGraph\n              },\n              className: \"CategorieProduct\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, product.categorieProduit.nom), \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, \" \", product.prixAchat, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, \" \", product.prixVente, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, \" \", dispoimg, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, \" \", product.quantite, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, React.createElement(Button, {\n              color: \"warning\",\n              onClick: this.showModal.bind(this, 'modalEditProduct', product),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              src: modify,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            })), ' ', React.createElement(Button, {\n              color: \"danger\",\n              onClick: this.showModal.bind(this, 'modalDeleteProduct', product),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              src: deleteimg,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            })), ' ')));\n          } else if (product.nom.toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n            table.push(React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            }, \" \", product.nom, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, \" \", React.createElement(\"span\", {\n              style: {\n                backgroundColor: product.categorieProduit.colorGraph\n              },\n              className: \"CategorieProduct\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, product.categorieProduit.nom), \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, \" \", product.prixAchat, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            }, \" \", product.prixVente, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, \" \", dispoimg, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            }, \" \", product.quantite, \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104\n              },\n              __self: this\n            }, React.createElement(Button, {\n              color: \"warning\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              src: modify,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            })), ' ', React.createElement(Button, {\n              color: \"danger\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              src: deleteimg,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            })), ' ')));\n          }\n        }\n      }\n\n      this.setState({\n        productsView: table\n      });\n    }\n  }, {\n    key: \"showProductsBar\",\n    value: function showProductsBar(filter) {\n      var produitsNom = [];\n      var produitsQte = [];\n      var colors = [];\n\n      if (Validators.isDefined(this.state.products.data)) {\n        for (var i = 0; i < Object.keys(this.state.products.data).length; i++) {\n          var product = this.state.products.data[i];\n\n          if (product.categorieProduit.nom == filter) {\n            produitsNom.push(product.nom);\n            produitsQte.push(product.quantite);\n            colors.push('#' + (Math.random() * 0xFFFFFF << 0).toString(16));\n          }\n        }\n      }\n\n      this.setState({\n        dataBar: {\n          labels: produitsNom,\n          datasets: [{\n            backgroundColor: colors,\n            data: produitsQte\n          }]\n        },\n        optionsBar: {\n          legend: {\n            display: false\n          },\n          title: {\n            display: true,\n            text: filter\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: 1\n              }\n            }]\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getValues\",\n    value: function getValues(event, field) {\n      this.setState(_defineProperty({}, field, event.target.value));\n      console.log(this.state);\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal(tabId) {\n      this.setState(_defineProperty({}, tabId, false));\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal(modal, product) {\n      var _this$setState3;\n\n      this.setState((_this$setState3 = {}, _defineProperty(_this$setState3, modal, true), _defineProperty(_this$setState3, \"currentProduct\", product), _this$setState3));\n    }\n  }, {\n    key: \"changeCategorieProduct\",\n    value: function changeCategorieProduct(event) {\n      this.showProductsBar(event.target.value);\n    }\n  }, {\n    key: \"changeShowProducts\",\n    value: function changeShowProducts(event) {\n      this.showProducts(event.target.value);\n    }\n  }, {\n    key: \"createProduit\",\n    value: function createProduit() {\n      var _this3 = this;\n\n      var fields = {\n        \"nomProduit\": this.state.nomProduit,\n        \"categorieProduit\": this.state.categorieProduit,\n        \"prixAchat\": this.state.prixAchat,\n        \"prixVente\": this.state.prixVente,\n        \"quantite\": this.state.quantite,\n        \"disponible\": this.state.disponible\n      };\n      var inputs = document.querySelectorAll('inputNewProduct');\n\n      for (var index = 0; index < inputs.length; ++index) {\n        inputs[index].classList.remove(\"error-input\");\n      }\n\n      console.log(isValid);\n      var isValid = Validators.fields_not_empty(fields);\n\n      if (isValid === true) {\n        axios.post(process.env.REACT_APP_API_URL + '/stock/newProduit', {\n          \"nomProduit\": this.state.nomProduit,\n          \"categorieProduit\": this.state.categorieProduit,\n          \"prixAchat\": this.state.prixAchat,\n          \"prixVente\": this.state.prixVente,\n          \"quantite\": this.state.quantite,\n          \"disponible\": this.state.disponible\n        }, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'authtoken': sessionStorage.getItem('token')\n          }\n        }).then(function (r) {\n          _this3.closeModal(\"modalNewUser\"); // A changer si possible, mauvaise méthode..\n          //eslint-disable-next-line\n\n\n          window.location.reload();\n        }).catch(function (r) {\n          alert(\"Le produit est déjà existant\");\n        });\n      } else {\n        for (var key in isValid) {\n          key.classList.add(\"error-input\");\n        }\n      }\n    }\n  }, {\n    key: \"countCategories\",\n    value: function countCategories() {\n      var categoriesSelect = [];\n      var categories = [];\n      var colors = [];\n      var categorieList = [];\n\n      for (var i = 0; i < Object.keys(this.state.products.data).length; i++) {\n        var product = this.state.products.data[i];\n\n        if (!categories.includes(product.categorieProduit.nom)) {\n          categories.push(product.categorieProduit.nom);\n          colors.push(product.categorieProduit.colorGraph);\n          categorieList.push(React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }, \" \", product.categorieProduit.nom, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261\n            },\n            __self: this\n          }, \" \", product.categorieProduit.colorGraph, \" \"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: modify,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          })), ' ', React.createElement(Button, {\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: deleteimg,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          })), ' ')));\n          categoriesSelect.push(React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, product.categorieProduit.nom));\n        }\n      }\n\n      var categorieStat = [];\n      var donnees = [];\n\n      for (var j = 0; j < categories.length; j++) {\n        categorieStat.push({\n          \"categorie\": categories[j],\n          \"count\": 0\n        });\n      }\n\n      for (var _i = 0; _i < Object.keys(this.state.products.data).length; _i++) {\n        var _product = this.state.products.data[_i];\n\n        for (var _j = 0; _j < categorieStat.length; _j++) {\n          if (categorieStat[_j].categorie == _product.categorieProduit.nom) {\n            categorieStat[_j].count++;\n            donnees[_j] = categorieStat[_j].count;\n          }\n        }\n      }\n\n      this.setState({\n        dataDoughnut: {\n          labels: categories,\n          datasets: [{\n            label: [\"My First dataset\", \"ok\"],\n            backgroundColor: colors,\n            data: donnees\n          }]\n        },\n        dataListCategories: categorieList,\n        categoriesSelect: categoriesSelect\n      });\n    } // ----------------------- VUE HTML -----------------------------\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Gestion des stocks\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        onChange: this.changeCategorieProduct,\n        bsSize: \"sm\",\n        className: \"CategorieSize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, this.state.categoriesSelect), React.createElement(Bar, {\n        data: this.state.dataBar,\n        options: this.state.optionsBar,\n        height: 500,\n        width: 800,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: this.state.dataDoughnut,\n        options: this.state.optionDoughnut,\n        height: 500,\n        width: 800,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \" Liste des produits \"), React.createElement(Button, {\n        color: \"success\",\n        onClick: this.showModal.bind(this, 'modalNewProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: plus,\n        className: \"NewUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), \" Nouveau produit\"), ' ', React.createElement(Button, {\n        color: \"success\",\n        onClick: utility.display.bind(this, \"vente\"),\n        className: \"NewUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: plus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }), \" Ajouter fichier CSV\"), ' ', React.createElement(Table, {\n        className: \"Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Nom du produit\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Cat\\xE9gorie de produit\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Prix d'achat\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Prix de vente\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Disponible\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Quantit\\xE9\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: this.changeShowProducts,\n        placeholder: \"Rechercher un produit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }))), this.state.productsView))), React.createElement(Col, {\n        lg: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \" Liste des cat\\xE9gories \"), React.createElement(Button, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: plus,\n        className: \"NewUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }), \" Nouvelle cat\\xE9gorie produit\"), ' ', React.createElement(Table, {\n        className: \"Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"Nom cat\\xE9gorie\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Couleur cat\\xE9gorie\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, this.state.dataListCategories)))), React.createElement(Modal, {\n        isOpen: this.state.modalNewProduct,\n        toggle: this.closeModal.bind(this, 'modalNewProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.closeModal.bind(this, 'modalNewProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"Nouveau produit\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"Nom du produit\"), React.createElement(Input, {\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'nomProduit');\n        },\n        placeholder: \"Nom du produit\",\n        className: \"inputNewProduct\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Cat\\xE9gorie de produit\"), React.createElement(Input, {\n        type: \"select\",\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'categorieProduit');\n        },\n        bsSize: \"sm\",\n        className: \"inputNewProduct\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, this.state.categoriesSelect)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"Prix d'achat\"), React.createElement(Input, {\n        type: \"number\",\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'prixAchat');\n        },\n        placeholder: \"Prix d'achat\",\n        className: \"inputNewProduct\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"Prix de vente\"), React.createElement(Input, {\n        type: \"number\",\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'prixVente');\n        },\n        placeholder: \"Prix de vente\",\n        className: \"inputNewProduct\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \"Quantit\\xE9\"), React.createElement(Input, {\n        type: \"number\",\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'quantite');\n        },\n        placeholder: \"Quantit\\xE9\",\n        className: \"inputNewProduct\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, \"Disponible\"), React.createElement(\"div\", {\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'disponible');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"True\",\n        name: \"disponible\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), \" \", React.createElement(\"img\", {\n        src: notdispo,\n        className: \"SmallImg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"False\",\n        name: \"disponible\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }), \" \", React.createElement(\"img\", {\n        src: dispo,\n        className: \"SmallImg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        className: \"SubmitButton\",\n        onClick: this.createProduit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"Cr\\xE9ation\"), React.createElement(Button, {\n        color: \"warning\",\n        className: \"SubmitButton\",\n        onClick: this.closeModal.bind(this, 'modalNewProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"Annuler\")))), React.createElement(Modal, {\n        isOpen: this.state.modalEditProduct,\n        toggle: this.closeModal.bind(this, 'modalEditProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.closeModal.bind(this, 'modalEditProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, \"\\xC9diter le produit \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, this.state.currentProduct.nom)), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"Nom du produit\"), React.createElement(Input, {\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'nomProduit');\n        },\n        value: this.state.currentProduct.nom,\n        placeholder: \"Nom du produit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, \"Cat\\xE9gorie de produit\"), React.createElement(Input, {\n        type: \"select\",\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'categorieProduit');\n        },\n        bsSize: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, this.state.categoriesSelect)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Prix d'achat\"), React.createElement(Input, {\n        type: \"number\",\n        placeholder: \"Prix d'achat\",\n        value: this.state.currentProduct.prixAchat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Prix de vente\"), React.createElement(Input, {\n        type: \"number\",\n        placeholder: \"Prix de vente\",\n        value: this.state.currentProduct.prixVente,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"Quantit\\xE9\"), React.createElement(Input, {\n        type: \"number\",\n        placeholder: \"Quantit\\xE9\",\n        value: this.state.currentProduct.quantite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }), React.createElement(Input, {\n        onChange: function onChange(evt) {\n          return _this4.getValues(evt, 'nomProduit');\n        },\n        value: this.state.currentProduct.nom,\n        placeholder: \"Nom du produit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        className: \"SubmitButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"Modifier\"), React.createElement(Button, {\n        color: \"warning\",\n        className: \"SubmitButton\",\n        onClick: this.closeModal.bind(this, 'modalEditProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"Annuler\")))), React.createElement(Modal, {\n        isOpen: this.state.modalDeleteProduct,\n        toggle: this.closeModal.bind(this, 'modalDeleteProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.closeModal.bind(this, 'modalDeleteProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, \"Suppression d'un produit\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"\\xCAtes-vous sur de supprimer l'utilisateur \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \" \", this.state.currentProduct.nom, \" \"), \" ?\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        className: \"SubmitButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, \"Supprimer\"), React.createElement(Button, {\n        color: \"warning\",\n        className: \"SubmitButton\",\n        onClick: this.closeModal.bind(this, 'modalDeleteProduct'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Annuler\"))));\n    }\n  }]);\n\n  return Stock;\n}(Component);\n\nexport default Stock;","map":{"version":3,"sources":["C:\\Users\\Clito\\Documents\\GitHub\\BDF-Reporting-Management\\front\\src\\stock\\Stock.js"],"names":["React","Component","Bar","Doughnut","axios","Validators","Row","Col","Card","Table","Button","Badge","Modal","ModalBody","CustomInput","ModalHeader","Input","FormGroup","ModalFooter","Vente","utility","Stock","props","state","products","productsView","dataDoughnut","optionDoughnut","dataBar","optionsBar","categoriesSelect","modalNewProduct","modalEditProduct","modalDeleteProduct","modalWait","currentProduct","nomProduit","prixAchat","prixVente","quantite","disponible","createProduit","bind","changeCategorieProduct","changeShowProducts","get","process","env","REACT_APP_API_URL","headers","sessionStorage","getItem","then","res","data","setState","showProducts","countCategories","showProductsBar","filter","table","isDefined","i","Object","keys","length","product","dispoimg","dispo","notdispo","push","nom","backgroundColor","categorieProduit","colorGraph","showModal","modify","deleteimg","toLowerCase","indexOf","produitsNom","produitsQte","colors","Math","random","toString","labels","datasets","legend","display","title","text","scales","yAxes","ticks","beginAtZero","stepSize","event","field","target","value","console","log","tabId","modal","fields","inputs","document","querySelectorAll","index","classList","remove","isValid","fields_not_empty","post","r","closeModal","window","location","reload","catch","alert","key","add","categories","categorieList","includes","categorieStat","donnees","j","categorie","count","label","dataListCategories","plus","evt","getValues"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,QAAb,QAA4B,iBAA5B;;;;;;AAOA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+CC,KAA/C,EAAsDC,SAAtD,EAAiEC,WAAjE,EAA8EC,WAA9E,EAA2FC,KAA3F,EAAkGC,SAAlG,EAA6GC,WAA7G,QAA+H,YAA/H;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;IAEMC,K;;;;;AAEF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,YAAY,EAAG,EAFN;AAGTC,MAAAA,YAAY,EAAG,EAHN;AAITC,MAAAA,cAAc,EAAG,EAJR;AAKTC,MAAAA,OAAO,EAAG,EALD;AAMTC,MAAAA,UAAU,EAAG,EANJ;AAOTC,MAAAA,gBAAgB,EAAG,EAPV;AAQTC,MAAAA,eAAe,EAAE,KARR;AASTC,MAAAA,gBAAgB,EAAE,KATT;AAUTC,MAAAA,kBAAkB,EAAE,KAVX;AAWTC,MAAAA,SAAS,EAAE,KAXF;AAYTC,MAAAA,cAAc,EAAG,EAZR;AAeTC,MAAAA,UAAU,EAAG,EAfJ;AAgBTC,MAAAA,SAAS,EAAG,EAhBH;AAiBTC,MAAAA,SAAS,EAAG,EAjBH;AAkBTC,MAAAA,QAAQ,EAAG,EAlBF;AAmBTC,MAAAA,UAAU,EAAG;AAnBJ,KAAb;AAwBA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AACA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BD,IAA5B,uDAA9B;AACA,UAAKE,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBF,IAAxB,uDAA1B;AA5Be;AA8BlB;;;;wCAEmB;AAAA;;AAChBtC,MAAAA,KAAK,CAACyC,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,oBAAxC,EACA;AACIC,QAAAA,OAAO,EAAG;AACN,uBAAcC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AADR;AADd,OADA,EAMKC,IANL,CAMU,UAAAC,GAAG,EAAK;AACV,YAAM7B,QAAQ,GAAG6B,GAAG,CAACC,IAArB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAE/B,UAAAA,QAAQ,EAAGA;AAAb,SAAd;;AACA,QAAA,MAAI,CAACgC,YAAL;;AACA,QAAA,MAAI,CAACC,eAAL;;AACA,QAAA,MAAI,CAACC,eAAL,CAAqB,WAArB;AACD,OAZP;AAeH;;;iCAIYC,M,EAAQ;AAGjB,UAAIC,KAAK,GAAG,EAAZ;;AAEA,UAAIvD,UAAU,CAACwD,SAAX,CAAqB,KAAKtC,KAAL,CAAWC,QAAX,CAAoB8B,IAAzC,CAAJ,EAAoD;AAEhD,aAAK,IAAIQ,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKzC,KAAL,CAAWC,QAAX,CAAoB8B,IAAhC,EAAsCW,MAAxD,EAAgEH,CAAC,EAAjE,EAAqE;AACjE,cAAII,OAAO,GAAG,KAAK3C,KAAL,CAAWC,QAAX,CAAoB8B,IAApB,CAAyBQ,CAAzB,CAAd;AACA,cAAIK,QAAQ,GAAID,OAAO,CAAC1B,UAAT,GAAuB;AAAK,YAAA,GAAG,EAAE4B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB,GAA6C;AAAK,YAAA,GAAG,EAAEC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5D;;AAEA,cAAI,CAAChE,UAAU,CAACwD,SAAX,CAAqBF,MAArB,CAAD,IAAiCA,MAAM,IAAI,EAA/C,EAAmD;AAC/CC,YAAAA,KAAK,CAACU,IAAN,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAMJ,OAAO,CAACK,GAAd,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAM,cAAA,KAAK,EAAE;AAACC,gBAAAA,eAAe,EAAEN,OAAO,CAACO,gBAAR,CAAyBC;AAA3C,eAAb;AAAqE,cAAA,SAAS,EAAC,kBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmGR,OAAO,CAACO,gBAAR,CAAyBF,GAA5H,CAAL,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAML,OAAO,CAAC7B,SAAd,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM6B,OAAO,CAAC5B,SAAd,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM6B,QAAN,MALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAMD,OAAO,CAAC3B,QAAd,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,OAAO,EAAE,KAAKoC,SAAL,CAAejC,IAAf,CAAoB,IAApB,EAA0B,kBAA1B,EAA8CwB,OAA9C,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAyF;AAAK,cAAA,GAAG,EAAEU,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzF,CADJ,EAC2H,GAD3H,EAEI,oBAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,QAAd;AAAuB,cAAA,OAAO,EAAE,KAAKD,SAAL,CAAejC,IAAf,CAAoB,IAApB,EAA0B,oBAA1B,EAAgDwB,OAAhD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA0F;AAAK,cAAA,GAAG,EAAEW,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1F,CAFJ,EAE+H,GAF/H,CAPJ,CADJ;AAaH,WAdD,MAcO,IAAIX,OAAO,CAACK,GAAR,CAAYO,WAAZ,GAA0BC,OAA1B,CAAkCpB,MAAM,CAACmB,WAAP,EAAlC,MAA4D,CAAC,CAAjE,EAAoE;AACvElB,YAAAA,KAAK,CAACU,IAAN,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAMJ,OAAO,CAACK,GAAd,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAM,cAAA,KAAK,EAAE;AAACC,gBAAAA,eAAe,EAAEN,OAAO,CAACO,gBAAR,CAAyBC;AAA3C,eAAb;AAAqE,cAAA,SAAS,EAAC,kBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmGR,OAAO,CAACO,gBAAR,CAAyBF,GAA5H,CAAL,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAML,OAAO,CAAC7B,SAAd,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM6B,OAAO,CAAC5B,SAAd,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM6B,QAAN,MALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAMD,OAAO,CAAC3B,QAAd,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAwB;AAAK,cAAA,GAAG,EAAEqC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,CADJ,EAC0D,GAD1D,EAEI,oBAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAuB;AAAK,cAAA,GAAG,EAAEC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,CAFJ,EAE4D,GAF5D,CAPJ,CADJ;AAcH;AAGJ;AACJ;;AAGD,WAAKtB,QAAL,CAAc;AAAE9B,QAAAA,YAAY,EAAGmC;AAAjB,OAAd;AACH;;;oCAEeD,M,EAAQ;AAEpB,UAAIqB,WAAW,GAAG,EAAlB;AACA,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,MAAM,GAAG,EAAb;;AAEA,UAAI7E,UAAU,CAACwD,SAAX,CAAqB,KAAKtC,KAAL,CAAWC,QAAX,CAAoB8B,IAAzC,CAAJ,EAAoD;AAChD,aAAK,IAAIQ,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKzC,KAAL,CAAWC,QAAX,CAAoB8B,IAAhC,EAAsCW,MAAxD,EAAgEH,CAAC,EAAjE,EAAqE;AACjE,cAAII,OAAO,GAAG,KAAK3C,KAAL,CAAWC,QAAX,CAAoB8B,IAApB,CAAyBQ,CAAzB,CAAd;;AACA,cAAII,OAAO,CAACO,gBAAR,CAAyBF,GAAzB,IAAgCZ,MAApC,EAA4C;AACxCqB,YAAAA,WAAW,CAACV,IAAZ,CAAiBJ,OAAO,CAACK,GAAzB;AACAU,YAAAA,WAAW,CAACX,IAAZ,CAAiBJ,OAAO,CAAC3B,QAAzB;AACA2C,YAAAA,MAAM,CAACZ,IAAP,CAAY,MAAI,CAACa,IAAI,CAACC,MAAL,KAAc,QAAd,IAAwB,CAAzB,EAA4BC,QAA5B,CAAqC,EAArC,CAAhB;AACH;AACJ;AACJ;;AAGD,WAAK9B,QAAL,CAAc;AACV3B,QAAAA,OAAO,EAAG;AACN0D,UAAAA,MAAM,EAAEN,WADF;AAENO,UAAAA,QAAQ,EAAE,CAAC;AACPf,YAAAA,eAAe,EAAEU,MADV;AAEP5B,YAAAA,IAAI,EAAE2B;AAFC,WAAD;AAFJ,SADA;AAQVpD,QAAAA,UAAU,EAAE;AACR2D,UAAAA,MAAM,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WADA;AAERC,UAAAA,KAAK,EAAE;AACLD,YAAAA,OAAO,EAAE,IADJ;AAELE,YAAAA,IAAI,EAAEhC;AAFD,WAFC;AAMRiC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE,CAAC;AACJC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,WAAW,EAAE,IADV;AAEHC,gBAAAA,QAAQ,EAAE;AAFP;AADH,aAAD;AADH;AANA;AARF,OAAd;AA0BH;;;8BAESC,K,EAAOC,K,EAAO;AACpB,WAAK3C,QAAL,qBACG2C,KADH,EACWD,KAAK,CAACE,MAAN,CAAaC,KADxB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/E,KAAjB;AACH;;;+BAEUgF,K,EAAO;AACd,WAAKhD,QAAL,qBACKgD,KADL,EACa,KADb;AAGH;;;8BAESC,K,EAAOtC,O,EAAS;AAAA;;AACtB,WAAKX,QAAL,yDACKiD,KADL,EACa,IADb,oCAEI,gBAFJ,EAEuBtC,OAFvB;AAIH;;;2CAEsB+B,K,EAAO;AAC1B,WAAKvC,eAAL,CAAqBuC,KAAK,CAACE,MAAN,CAAaC,KAAlC;AACH;;;uCAEkBH,K,EAAO;AACtB,WAAKzC,YAAL,CAAkByC,KAAK,CAACE,MAAN,CAAaC,KAA/B;AACH;;;oCAEe;AAAA;;AACZ,UAAIK,MAAM,GAAG;AACT,sBAAe,KAAKlF,KAAL,CAAWa,UADjB;AAET,4BAAqB,KAAKb,KAAL,CAAWkD,gBAFvB;AAGT,qBAAc,KAAKlD,KAAL,CAAWc,SAHhB;AAIT,qBAAc,KAAKd,KAAL,CAAWe,SAJhB;AAKT,oBAAa,KAAKf,KAAL,CAAWgB,QALf;AAMT,sBAAe,KAAKhB,KAAL,CAAWiB;AANjB,OAAb;AASA,UAAIkE,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,CAAb;;AACA,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,MAAM,CAACzC,MAAnC,EAA2C,EAAE4C,KAA7C,EAAoD;AAChDH,QAAAA,MAAM,CAACG,KAAD,CAAN,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,aAA/B;AACH;;AAEDV,MAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AAEA,UAAIA,OAAO,GAAG3G,UAAU,CAAC4G,gBAAX,CAA4BR,MAA5B,CAAd;;AAEA,UAAIO,OAAO,KAAK,IAAhB,EAAsB;AAClB5G,QAAAA,KAAK,CAAC8G,IAAN,CAAWpE,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,mBAAzC,EACI;AACI,wBAAe,KAAKzB,KAAL,CAAWa,UAD9B;AAEI,8BAAqB,KAAKb,KAAL,CAAWkD,gBAFpC;AAGI,uBAAc,KAAKlD,KAAL,CAAWc,SAH7B;AAII,uBAAc,KAAKd,KAAL,CAAWe,SAJ7B;AAKI,sBAAa,KAAKf,KAAL,CAAWgB,QAL5B;AAMI,wBAAe,KAAKhB,KAAL,CAAWiB;AAN9B,SADJ,EASI;AACIS,UAAAA,OAAO,EAAG;AACN,4BAAgB,mCADV;AAEN,yBAAcC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAFR;AADd,SATJ,EAgBKC,IAhBL,CAgBU,UAAA+D,CAAC,EAAI;AACP,UAAA,MAAI,CAACC,UAAL,CAAgB,cAAhB,EADO,CAEP;AACA;;;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,SArBL,EAsBKC,KAtBL,CAsBW,UAACL,CAAD,EAAO;AAACM,UAAAA,KAAK,CAAC,8BAAD,CAAL;AAAsC,SAtBzD;AAwBH,OAzBD,MAyBO;AACH,aAAK,IAAIC,GAAT,IAAgBV,OAAhB,EAAyB;AACrBU,UAAAA,GAAG,CAACZ,SAAJ,CAAca,GAAd,CAAkB,aAAlB;AACH;AACJ;AACJ;;;sCAEiB;AACd,UAAI7F,gBAAgB,GAAG,EAAvB;AACA,UAAI8F,UAAU,GAAG,EAAjB;AACA,UAAI1C,MAAM,GAAG,EAAb;AACA,UAAI2C,aAAa,GAAG,EAApB;;AAEA,WAAK,IAAI/D,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKzC,KAAL,CAAWC,QAAX,CAAoB8B,IAAhC,EAAsCW,MAAxD,EAAgEH,CAAC,EAAjE,EAAqE;AAEjE,YAAII,OAAO,GAAG,KAAK3C,KAAL,CAAWC,QAAX,CAAoB8B,IAApB,CAAyBQ,CAAzB,CAAd;;AAEA,YAAI,CAAC8D,UAAU,CAACE,QAAX,CAAoB5D,OAAO,CAACO,gBAAR,CAAyBF,GAA7C,CAAL,EAAwD;AAEpDqD,UAAAA,UAAU,CAACtD,IAAX,CAAgBJ,OAAO,CAACO,gBAAR,CAAyBF,GAAzC;AACAW,UAAAA,MAAM,CAACZ,IAAP,CAAYJ,OAAO,CAACO,gBAAR,CAAyBC,UAArC;AACAmD,UAAAA,aAAa,CAACvD,IAAd,CAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAMJ,OAAO,CAACO,gBAAR,CAAyBF,GAA/B,MADe,EAEf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAML,OAAO,CAACO,gBAAR,CAAyBC,UAA/B,MAFe,EAGf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAK,YAAA,GAAG,EAAEE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAxB,CADJ,EAC0D,GAD1D,EAEI,oBAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAK,YAAA,GAAG,EAAEC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB,CAFJ,EAE4D,GAF5D,CAHe,CAAnB;AAQA/C,UAAAA,gBAAgB,CAACwC,IAAjB,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASJ,OAAO,CAACO,gBAAR,CAAyBF,GAAlC,CADJ;AAGH;AAEJ;;AAED,UAAIwD,aAAa,GAAG,EAApB;AACA,UAAIC,OAAO,GAAG,EAAd;;AAGA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGL,UAAU,CAAC3D,MAAhC,EAAwCgE,CAAC,EAAzC,EAA6C;AAEzCF,QAAAA,aAAa,CAACzD,IAAd,CAAmB;AAAC,uBAAcsD,UAAU,CAACK,CAAD,CAAzB;AAA8B,mBAAU;AAAxC,SAAnB;AACH;;AAGD,WAAK,IAAInE,EAAC,GAAC,CAAX,EAAcA,EAAC,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKzC,KAAL,CAAWC,QAAX,CAAoB8B,IAAhC,EAAsCW,MAAxD,EAAgEH,EAAC,EAAjE,EAAqE;AACjE,YAAII,QAAO,GAAG,KAAK3C,KAAL,CAAWC,QAAX,CAAoB8B,IAApB,CAAyBQ,EAAzB,CAAd;;AAEA,aAAK,IAAImE,EAAC,GAAG,CAAb,EAAiBA,EAAC,GAAGF,aAAa,CAAC9D,MAAnC,EAA2CgE,EAAC,EAA5C,EAAgD;AAE5C,cAAIF,aAAa,CAACE,EAAD,CAAb,CAAiBC,SAAjB,IAA8BhE,QAAO,CAACO,gBAAR,CAAyBF,GAA3D,EAAgE;AAC5DwD,YAAAA,aAAa,CAACE,EAAD,CAAb,CAAiBE,KAAjB;AACAH,YAAAA,OAAO,CAACC,EAAD,CAAP,GAAcF,aAAa,CAACE,EAAD,CAAb,CAAiBE,KAA/B;AAEH;AACJ;AAEJ;;AAED,WAAK5E,QAAL,CAAc;AACV7B,QAAAA,YAAY,EAAG;AACX4D,UAAAA,MAAM,EAAEsC,UADG;AAEXrC,UAAAA,QAAQ,EAAE,CAAC;AACP6C,YAAAA,KAAK,EAAE,CAAC,kBAAD,EAAoB,IAApB,CADA;AAEP5D,YAAAA,eAAe,EAAEU,MAFV;AAGP5B,YAAAA,IAAI,EAAE0E;AAHC,WAAD;AAFC,SADL;AASVK,QAAAA,kBAAkB,EAAGR,aATX;AAUV/F,QAAAA,gBAAgB,EAAGA;AAVT,OAAd;AAaH,K,CACD;;;;6BAES;AAAA;;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFR,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,KAAKa,sBAApC;AAA4D,QAAA,MAAM,EAAC,IAAnE;AAAwE,QAAA,SAAS,EAAC,eAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKpB,KAAL,CAAWO,gBADhB,CAFJ,EAMI,oBAAE,GAAF;AACI,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWK,OADrB;AAEI,QAAA,OAAO,EAAG,KAAKL,KAAL,CAAWM,UAFzB;AAGI,QAAA,MAAM,EAAE,GAHZ;AAII,QAAA,KAAK,EAAE,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ,EAeI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAE,QAAF;AACI,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWG,YADrB;AAEI,QAAA,OAAO,EAAG,KAAKH,KAAL,CAAWI,cAFzB;AAGI,QAAA,MAAM,EAAE,GAHZ;AAII,QAAA,KAAK,EAAE,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAfJ,CAVJ,EAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCJ,EAoCI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAyB,QAAA,OAAO,EAAE,KAAKgD,SAAL,CAAejC,IAAf,CAAoB,IAApB,EAA0B,iBAA1B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgF;AAAK,QAAA,GAAG,EAAE4F,IAAV;AAAgB,QAAA,SAAS,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhF,qBAFR,EAEuJ,GAFvJ,EAGQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAyB,QAAA,OAAO,EAAElH,OAAO,CAACqE,OAAR,CAAgB/C,IAAhB,CAAqB,IAArB,EAA0B,OAA1B,CAAlC;AAAsE,QAAA,SAAS,EAAC,SAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2F;AAAK,QAAA,GAAG,EAAE4F,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3F,yBAHR,EAGmJ,GAHnJ,EAIQ,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,CAFA,CAFJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAK1F,kBAAtB;AAA0C,QAAA,WAAW,EAAC,uBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CADJ,CADA,EAIC,KAAKrB,KAAL,CAAWE,YAJZ,CAdJ,CAJR,CADJ,EA6BI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEQ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB;AAAK,QAAA,GAAG,EAAE6G,IAAV;AAAgB,QAAA,SAAS,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,mCAFR,EAE0G,GAF1G,EAGQ,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CAFA,CAFJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAK/G,KAAL,CAAW8G,kBAFZ,CAVJ,CAHR,CA7BJ,CApCJ,EAyFI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWQ,eAA1B;AAA2C,QAAA,MAAM,EAAE,KAAKqF,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,iBAA3B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAK0E,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,iBAA3B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,kBAAA6F,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,YAApB,CAAJ;AAAA,SAApB;AAA2D,QAAA,WAAW,EAAC,gBAAvE;AAAwF,QAAA,SAAS,EAAC,iBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,kBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,kBAApB,CAAJ;AAAA,SAAlC;AAA+E,QAAA,MAAM,EAAC,IAAtF;AAA2F,QAAA,SAAS,EAAC,iBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKhH,KAAL,CAAWO,gBADhB,CAFJ,CANJ,EAYI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,kBAAAyG,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,WAApB,CAAJ;AAAA,SAAlC;AAAwE,QAAA,WAAW,EAAC,cAApF;AAAmG,QAAA,SAAS,EAAC,iBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZJ,EAgBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,kBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,WAApB,CAAJ;AAAA,SAAlC;AAAuE,QAAA,WAAW,EAAC,eAAnF;AAAoG,QAAA,SAAS,EAAC,iBAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAhBJ,EAoBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAoB,QAAA,QAAQ,EAAE,kBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,UAApB,CAAJ;AAAA,SAAjC;AAAuE,QAAA,WAAW,EAAC,aAAnF;AAA8F,QAAA,SAAS,EAAC,iBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CApBJ,EAwBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,QAAA,QAAQ,EAAE,kBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,YAApB,CAAJ;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,MAA1B;AAAiC,QAAA,IAAI,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,OACyD;AAAK,QAAA,GAAG,EAAElE,QAAV;AAAqB,QAAA,SAAS,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADzD,EAEI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAkC,QAAA,IAAI,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,OAE0D;AAAK,QAAA,GAAG,EAAED,KAAV;AAAiB,QAAA,SAAS,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF1D,CAFJ,CAxBJ,EAgCI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAiD,QAAA,OAAO,EAAE,KAAK3B,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAiD,QAAA,OAAO,EAAE,KAAK2E,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,iBAA3B,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAhCJ,CAJJ,CAzFJ,EAoII,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWS,gBAA1B;AAA4C,QAAA,MAAM,EAAE,KAAKoF,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,kBAA3B,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAK0E,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,kBAA3B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKnB,KAAL,CAAWY,cAAX,CAA0BoC,GAA9B,CAD1B,CADJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,kBAAAgE,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,YAApB,CAAJ;AAAA,SAApB;AAA2D,QAAA,KAAK,EAAE,KAAKhH,KAAL,CAAWY,cAAX,CAA0BoC,GAA5F;AAAiG,QAAA,WAAW,EAAC,gBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,kBAAAgE,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,kBAApB,CAAJ;AAAA,SAAlC;AAA+E,QAAA,MAAM,EAAC,IAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKhH,KAAL,CAAWO,gBADhB,CAFJ,CANJ,EAYI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC,cAAjC;AAAgD,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWY,cAAX,CAA0BE,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZJ,EAgBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC,eAAjC;AAAiD,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWY,cAAX,CAA0BG,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAhBJ,EAoBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC,aAAjC;AAA4C,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWY,cAAX,CAA0BI,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CApBJ,EAwBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,kBAAAgG,GAAG;AAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,EAAoB,YAApB,CAAJ;AAAA,SAApB;AAA2D,QAAA,KAAK,EAAE,KAAKhH,KAAL,CAAWY,cAAX,CAA0BoC,GAA5F;AAAiG,QAAA,WAAW,EAAC,gBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAxBJ,EA6BI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAiD,QAAA,OAAO,EAAE,KAAK6C,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,kBAA3B,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CA7BJ,CAJJ,CApIJ,EA6KI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWU,kBAA1B;AAA8C,QAAA,MAAM,EAAE,KAAKmF,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,oBAA3B,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAK0E,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,oBAA3B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK,KAAKnB,KAAL,CAAWY,cAAX,CAA0BoC,GAA/B,MAD7C,OAJJ,EAOI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAiD,QAAA,OAAO,EAAE,KAAK6C,UAAL,CAAgB1E,IAAhB,CAAqB,IAArB,EAA2B,oBAA3B,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAPJ,CA7KJ,CADJ;AA8LH;;;;EA1eezC,S;;AA6epB,eAAeoB,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {Bar, Doughnut} from 'react-chartjs-2';\r\n\r\nimport dispo from \"./img/checked.svg\";\r\nimport notdispo from \"./img/notchecked.svg\";\r\nimport modify from '../newUser/img/edit.svg';\r\nimport plus from '../newUser/img/add.svg';\r\nimport deleteimg from '../newUser/img/rubbish-bin.svg';\r\nimport './Stock.css';\r\nimport axios from 'axios';\r\nimport Validators from '../validators/validators'\r\nimport { Row, Col, Card, Table, Button, Badge, Modal, ModalBody, CustomInput, ModalHeader, Input, FormGroup, ModalFooter} from 'reactstrap';\r\nimport Vente from '../vente/Vente';\r\nimport utility from '../utility/utility';\r\n\r\nclass Stock extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            productsView : [],\r\n            dataDoughnut : {},\r\n            optionDoughnut : {},\r\n            dataBar : {},\r\n            optionsBar : {},\r\n            categoriesSelect : [],\r\n            modalNewProduct: false,\r\n            modalEditProduct: false,\r\n            modalDeleteProduct: false,\r\n            modalWait: false,\r\n            currentProduct : {},\r\n\r\n\r\n            nomProduit : \"\",\r\n            prixAchat : \"\",\r\n            prixVente : \"\",\r\n            quantite : \"\",\r\n            disponible : \"\",\r\n            \r\n        \r\n        }\r\n\r\n        this.createProduit = this.createProduit.bind(this);\r\n        this.changeCategorieProduct = this.changeCategorieProduct.bind(this);\r\n        this.changeShowProducts = this.changeShowProducts.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(process.env.REACT_APP_API_URL+'/stock/getProduits',\r\n        {\r\n            headers : {\r\n                'authtoken' : sessionStorage.getItem('token')\r\n            }\r\n        } )\r\n            .then(res =>  {\r\n                const products = res.data;\r\n                this.setState({ products : products });\r\n                this.showProducts();\r\n                this.countCategories();\r\n                this.showProductsBar(\"categorie\");\r\n              });\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    showProducts(filter) {\r\n\r\n        \r\n        let table = []\r\n    \r\n        if (Validators.isDefined(this.state.products.data)) {\r\n            \r\n            for (let i=0; i < Object.keys(this.state.products.data).length; i++) {\r\n                let product = this.state.products.data[i];\r\n                let dispoimg = (product.disponible) ? <img src={dispo} /> : <img src={notdispo} />;\r\n\r\n                if (!Validators.isDefined(filter) || filter == \"\") {\r\n                    table.push(\r\n                        <tr>\r\n                            <td> {product.nom} </td>\r\n                            <td> <span style={{backgroundColor: product.categorieProduit.colorGraph}} className=\"CategorieProduct\">{product.categorieProduit.nom}</span> </td>\r\n                            <td> {product.prixAchat} </td>\r\n                            <td> {product.prixVente} </td>\r\n                            <td> {dispoimg} </td>\r\n                            <td> {product.quantite} </td>\r\n                            <td> \r\n                                <Button color=\"warning\" onClick={this.showModal.bind(this, 'modalEditProduct', product)}><img src={modify} /></Button>{' '}\r\n                                <Button color=\"danger\" onClick={this.showModal.bind(this, 'modalDeleteProduct', product)}><img src={deleteimg} /></Button>{' '}\r\n                            </td>  \r\n                        </tr>);\r\n                } else if (product.nom.toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\r\n                    table.push(\r\n                        <tr>\r\n                            <td> {product.nom} </td>\r\n                            <td> <span style={{backgroundColor: product.categorieProduit.colorGraph}} className=\"CategorieProduct\">{product.categorieProduit.nom}</span> </td>\r\n                            <td> {product.prixAchat} </td>\r\n                            <td> {product.prixVente} </td>\r\n                            <td> {dispoimg} </td>\r\n                            <td> {product.quantite} </td>\r\n                            <td> \r\n                                <Button color=\"warning\"><img src={modify} /></Button>{' '}\r\n                                <Button color=\"danger\"><img src={deleteimg} /></Button>{' '}\r\n                            </td>  \r\n                        </tr>);\r\n                    \r\n                }\r\n                \r\n                \r\n            }\r\n        }\r\n        \r\n        \r\n        this.setState({ productsView : table });\r\n    }\r\n\r\n    showProductsBar(filter) {\r\n\r\n        let produitsNom = [];\r\n        let produitsQte = [];\r\n        let colors = [];\r\n\r\n        if (Validators.isDefined(this.state.products.data)) {\r\n            for (let i=0; i < Object.keys(this.state.products.data).length; i++) {\r\n                let product = this.state.products.data[i];\r\n                if (product.categorieProduit.nom == filter) {\r\n                    produitsNom.push(product.nom);\r\n                    produitsQte.push(product.quantite);\r\n                    colors.push('#'+(Math.random()*0xFFFFFF<<0).toString(16));\r\n                }\r\n            }\r\n        }\r\n        \r\n          \r\n        this.setState({\r\n            dataBar : {\r\n                labels: produitsNom,\r\n                datasets: [{\r\n                    backgroundColor: colors,\r\n                    data: produitsQte,\r\n                }]\r\n            },\r\n            optionsBar: {\r\n                legend: { display: false },\r\n                title: {\r\n                  display: true,\r\n                  text: filter\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            stepSize: 1\r\n                        }\r\n                    }]\r\n                }\r\n              }\r\n        \r\n        });\r\n\r\n    }\r\n\r\n    getValues(event, field) {\r\n        this.setState({\r\n          [field]: event.target.value\r\n        });\r\n        console.log(this.state);\r\n    }\r\n\r\n    closeModal(tabId) {\r\n        this.setState({\r\n            [tabId]: false\r\n        });\r\n    }\r\n\r\n    showModal(modal, product) {\r\n        this.setState({\r\n            [modal]: true,\r\n            \"currentProduct\" : product\r\n        });\r\n    }\r\n\r\n    changeCategorieProduct(event) {\r\n        this.showProductsBar(event.target.value);\r\n    }\r\n\r\n    changeShowProducts(event) {\r\n        this.showProducts(event.target.value);\r\n    }\r\n\r\n    createProduit() {\r\n        let fields = {\r\n            \"nomProduit\" : this.state.nomProduit,\r\n            \"categorieProduit\" : this.state.categorieProduit,\r\n            \"prixAchat\" : this.state.prixAchat,\r\n            \"prixVente\" : this.state.prixVente,\r\n            \"quantite\" : this.state.quantite,\r\n            \"disponible\" : this.state.disponible\r\n        }\r\n        \r\n        let inputs = document.querySelectorAll('inputNewProduct');\r\n        for (let index = 0; index < inputs.length; ++index) {\r\n            inputs[index].classList.remove(\"error-input\");\r\n        }\r\n\r\n        console.log(isValid);\r\n \r\n        let isValid = Validators.fields_not_empty(fields);\r\n\r\n        if (isValid === true) {\r\n            axios.post(process.env.REACT_APP_API_URL+'/stock/newProduit', \r\n                {\r\n                    \"nomProduit\" : this.state.nomProduit,\r\n                    \"categorieProduit\" : this.state.categorieProduit,\r\n                    \"prixAchat\" : this.state.prixAchat,\r\n                    \"prixVente\" : this.state.prixVente,\r\n                    \"quantite\" : this.state.quantite,\r\n                    \"disponible\" : this.state.disponible\r\n                },\r\n                {\r\n                    headers : {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        'authtoken' : sessionStorage.getItem('token')\r\n                    }\r\n                } \r\n                )\r\n                .then(r => {\r\n                    this.closeModal(\"modalNewUser\");\r\n                    // A changer si possible, mauvaise méthode..\r\n                    //eslint-disable-next-line\r\n                    window.location.reload();\r\n                })\r\n                .catch((r) => {alert(\"Le produit est déjà existant\")});\r\n            \r\n        } else {\r\n            for (var key in isValid) {\r\n                key.classList.add(\"error-input\");\r\n            }\r\n        }\r\n    }\r\n    \r\n    countCategories() {\r\n        let categoriesSelect = []\r\n        let categories = []\r\n        let colors = []\r\n        let categorieList = []\r\n\r\n        for (let i=0; i < Object.keys(this.state.products.data).length; i++) {\r\n            \r\n            let product = this.state.products.data[i];\r\n            \r\n            if (!categories.includes(product.categorieProduit.nom)) {\r\n\r\n                categories.push(product.categorieProduit.nom);\r\n                colors.push(product.categorieProduit.colorGraph);\r\n                categorieList.push(<tr>\r\n                    <td> {product.categorieProduit.nom} </td>\r\n                    <td> {product.categorieProduit.colorGraph} </td>\r\n                    <td> \r\n                        <Button color=\"warning\"><img src={modify} /></Button>{' '}\r\n                        <Button color=\"danger\"><img src={deleteimg} /></Button>{' '}\r\n                    </td>                 \r\n                </tr>);\r\n                categoriesSelect.push(\r\n                    <option>{product.categorieProduit.nom}</option>\r\n                );\r\n            }\r\n                \r\n        }\r\n\r\n        let categorieStat = [];\r\n        let donnees = [];\r\n        \r\n\r\n        for (let j = 0 ; j < categories.length; j++) {\r\n                \r\n            categorieStat.push({\"categorie\" : categories[j], \"count\" : 0});\r\n        }\r\n\r\n        \r\n        for (let i=0; i < Object.keys(this.state.products.data).length; i++) {\r\n            let product = this.state.products.data[i];\r\n\r\n            for (let j = 0 ; j < categorieStat.length; j++) {\r\n                \r\n                if (categorieStat[j].categorie == product.categorieProduit.nom) {\r\n                    categorieStat[j].count++;\r\n                    donnees[j] =  categorieStat[j].count;\r\n\r\n                }\r\n            }\r\n        \r\n        }\r\n        \r\n        this.setState({\r\n            dataDoughnut : {\r\n                labels: categories,\r\n                datasets: [{\r\n                    label: [\"My First dataset\",\"ok\"],\r\n                    backgroundColor: colors,\r\n                    data: donnees,\r\n                }]\r\n            },\r\n            dataListCategories : categorieList,\r\n            categoriesSelect : categoriesSelect\r\n        \r\n        }); \r\n    }\r\n    // ----------------------- VUE HTML -----------------------------\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <Row>\r\n\r\n                        <h3>\r\n                            Gestion des stocks\r\n                        </h3>\r\n\r\n\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        \r\n                        <Input type=\"select\" onChange={this.changeCategorieProduct} bsSize=\"sm\" className=\"CategorieSize\">\r\n                            {this.state.categoriesSelect}\r\n                        </Input>\r\n                        \r\n                        < Bar\r\n                            data={this.state.dataBar}\r\n                            options= {this.state.optionsBar}\r\n                            height={500}\r\n                            width={800}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        < Doughnut\r\n                            data={this.state.dataDoughnut}\r\n                            options= {this.state.optionDoughnut}\r\n                            height={500}\r\n                            width={800}\r\n                        />\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                    <Col lg=\"7\">\r\n                        <h5> Liste des produits </h5>\r\n                            <Button color=\"success\"  onClick={this.showModal.bind(this, 'modalNewProduct')}><img src={plus} className=\"NewUser\"/> Nouveau produit</Button>{' '}\r\n                            <Button color=\"success\"  onClick={utility.display.bind(this,\"vente\")} className=\"NewUser\" ><img src={plus} /> Ajouter fichier CSV</Button>{' '}\r\n                            <Table className=\"Table\">\r\n                                \r\n                                <thead>\r\n                                \r\n                                <tr>\r\n                                    <th>Nom du produit</th>\r\n                                    <th>Catégorie de produit</th>\r\n                                    <th>Prix d'achat</th>\r\n                                    <th>Prix de vente</th>\r\n                                    <th>Disponible</th>\r\n                                    <th>Quantité</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td><Input onChange={this.changeShowProducts} placeholder=\"Rechercher un produit\"/></td>\r\n                                </tr>\r\n                                {this.state.productsView}\r\n                                \r\n                                </tbody>\r\n                            </Table>\r\n                    </Col>\r\n                    \r\n                    <Col lg=\"5\">\r\n                        <h5> Liste des catégories </h5>\r\n                            <Button color=\"success\"><img src={plus} className=\"NewUser\"/> Nouvelle catégorie produit</Button>{' '}\r\n                            <Table className=\"Table\">\r\n                                \r\n                                <thead>\r\n                                \r\n                                <tr>\r\n                                    <th>Nom catégorie</th>\r\n                                    <th>Couleur catégorie</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                            \r\n                                {this.state.dataListCategories}\r\n                                \r\n                                </tbody>\r\n                            </Table>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n                <Modal isOpen={this.state.modalNewProduct} toggle={this.closeModal.bind(this, 'modalNewProduct')}>\r\n                    <ModalHeader toggle={this.closeModal.bind(this, 'modalNewProduct')}>\r\n                            Nouveau produit\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>Nom du produit</label>\r\n                            <Input onChange={evt => this.getValues(evt, 'nomProduit')} placeholder=\"Nom du produit\" className=\"inputNewProduct\"/>\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup>\r\n                            <label>Catégorie de produit</label>\r\n                            <Input type=\"select\" onChange={evt => this.getValues(evt, 'categorieProduit')} bsSize=\"sm\" className=\"inputNewProduct\">\r\n                                {this.state.categoriesSelect}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Prix d'achat</label>\r\n                            <Input type=\"number\" onChange={evt => this.getValues(evt, 'prixAchat')} placeholder=\"Prix d'achat\" className=\"inputNewProduct\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Prix de vente</label>\r\n                            <Input type=\"number\" onChange={evt => this.getValues(evt, 'prixVente')}placeholder=\"Prix de vente\"  className=\"inputNewProduct\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Quantité</label>\r\n                            <Input type=\"number\"onChange={evt => this.getValues(evt, 'quantite')}  placeholder=\"Quantité\" className=\"inputNewProduct\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Disponible</label>\r\n                            <div onChange={evt => this.getValues(evt, 'disponible')}>\r\n                                <input type=\"radio\" value=\"True\" name=\"disponible\"/> <img src={notdispo}  className=\"SmallImg\"/>\r\n                                <input type=\"radio\" value=\"False\" name=\"disponible\"/> <img src={dispo} className=\"SmallImg\" /> \r\n                            </div>\r\n                        </FormGroup>\r\n                        \r\n                        <ModalFooter>\r\n                            <Button color=\"success\" className=\"SubmitButton\" onClick={this.createProduit}>Création</Button>\r\n                            <Button color=\"warning\" className=\"SubmitButton\" onClick={this.closeModal.bind(this, 'modalNewProduct')}>Annuler</Button>\r\n                        </ModalFooter>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.modalEditProduct} toggle={this.closeModal.bind(this, 'modalEditProduct')}>\r\n                    <ModalHeader toggle={this.closeModal.bind(this, 'modalEditProduct')}>\r\n                            Éditer le produit <b>{this.state.currentProduct.nom}</b>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>Nom du produit</label>\r\n                            <Input onChange={evt => this.getValues(evt, 'nomProduit')} value={this.state.currentProduct.nom} placeholder=\"Nom du produit\"/>\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup>\r\n                            <label>Catégorie de produit</label>\r\n                            <Input type=\"select\" onChange={evt => this.getValues(evt, 'categorieProduit')} bsSize=\"sm\">\r\n                                {this.state.categoriesSelect}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Prix d'achat</label>\r\n                            <Input type=\"number\" placeholder=\"Prix d'achat\" value={this.state.currentProduct.prixAchat}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Prix de vente</label>\r\n                            <Input type=\"number\" placeholder=\"Prix de vente\" value={this.state.currentProduct.prixVente}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Quantité</label>\r\n                            <Input type=\"number\" placeholder=\"Quantité\" value={this.state.currentProduct.quantite}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label></label>\r\n                            <Input onChange={evt => this.getValues(evt, 'nomProduit')} value={this.state.currentProduct.nom} placeholder=\"Nom du produit\"/>\r\n                        </FormGroup>\r\n                        \r\n                        <ModalFooter>\r\n                            <Button color=\"success\" className=\"SubmitButton\" >Modifier</Button>\r\n                            <Button color=\"warning\" className=\"SubmitButton\" onClick={this.closeModal.bind(this, 'modalEditProduct')}>Annuler</Button>\r\n                        </ModalFooter>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n\r\n                <Modal isOpen={this.state.modalDeleteProduct} toggle={this.closeModal.bind(this, 'modalDeleteProduct')}>\r\n                    <ModalHeader toggle={this.closeModal.bind(this, 'modalDeleteProduct')}>\r\n                        Suppression d'un produit\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        Êtes-vous sur de supprimer l'utilisateur <b> {this.state.currentProduct.nom} </b> ?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"danger\" className=\"SubmitButton\" >Supprimer</Button>\r\n                        <Button color=\"warning\" className=\"SubmitButton\" onClick={this.closeModal.bind(this, 'modalDeleteProduct')}>Annuler</Button>\r\n                    </ModalFooter>\r\n                    \r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stock;"]},"metadata":{},"sourceType":"module"}