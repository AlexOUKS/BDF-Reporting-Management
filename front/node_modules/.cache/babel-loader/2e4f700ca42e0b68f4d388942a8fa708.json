{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"C:\\\\Users\\\\Clito\\\\Documents\\\\GitHub\\\\BDF-Reporting-Management\\\\front\\\\src\\\\validators\\\\validators.js\";\nimport Stock from \"../stock/Stock\";\nimport NewUser from \"../newUser/NewUser\";\n\nvar Validators =\n/*#__PURE__*/\nfunction () {\n  function Validators() {\n    _classCallCheck(this, Validators);\n  }\n\n  _createClass(Validators, null, [{\n    key: \"isDefined\",\n    value: function isDefined(value) {\n      /*\r\n      Check if value is defined\r\n      :param value: your variable\r\n      :return: True if value is defined, False if not\r\n      */\n      return value == \"undefined\" || value == null ? false : true;\n    }\n  }, {\n    key: \"fields_not_empty\",\n    value: function fields_not_empty(array) {\n      /*\r\n      Check if fields are not empty\r\n      :param array: array of values\r\n      :return: True if values of array's key is not empty, Array of keys where values are empty\r\n      */\n      var errors = [];\n\n      for (var key in array) {\n        if (!this.isDefined(array[key]) || array[key] === \"\") errors.push(key);\n      }\n\n      return errors.length === 0 ? true : errors;\n    }\n  }, {\n    key: \"display\",\n    value: function display(menu) {\n      switch (menu) {\n        case \"vente\":\n          this.setState({\n            display: React.createElement(Vente, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            })\n          });\n          break;\n\n        case \"stock\":\n          this.setState({\n            display: React.createElement(Stock, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            })\n          });\n          break;\n\n        case \"user\":\n          this.setState({\n            display: React.createElement(NewUser, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            })\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }]);\n\n  return Validators;\n}();\n\nexport default Validators;","map":{"version":3,"sources":["C:\\Users\\Clito\\Documents\\GitHub\\BDF-Reporting-Management\\front\\src\\validators\\validators.js"],"names":["Stock","NewUser","Validators","value","array","errors","key","isDefined","push","length","menu","setState","display"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;IAEMC,U;;;;;;;;;8BAEeC,K,EAAO;AACpB;;;;;AAMA,aAAQA,KAAK,IAAI,WAAT,IAAwBA,KAAK,IAAI,IAAlC,GAA0C,KAA1C,GAAkD,IAAzD;AAEH;;;qCAEuBC,K,EAAO;AAC3B;;;;;AAMA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,GAAT,IAAgBF,KAAhB,EAAuB;AACnB,YAAI,CAAC,KAAKG,SAAL,CAAeH,KAAK,CAACE,GAAD,CAApB,CAAD,IAA+BF,KAAK,CAACE,GAAD,CAAL,KAAe,EAAlD,EACID,MAAM,CAACG,IAAP,CAAYF,GAAZ;AACP;;AAED,aAAQD,MAAM,CAACI,MAAP,KAAkB,CAAnB,GAAyB,IAAzB,GAAiCJ,MAAxC;AAEH;;;4BAEeK,I,EAAM;AAClB,cAAQA,IAAR;AACI,aAAK,OAAL;AACI,eAAKC,QAAL,CAAc;AAACC,YAAAA,OAAO,EAAG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX,WAAd;AACJ;;AACA,aAAK,OAAL;AACI,eAAKD,QAAL,CAAc;AAACC,YAAAA,OAAO,EAAG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX,WAAd;AACJ;;AACA,aAAK,MAAL;AACI,eAAKD,QAAL,CAAc;AAACC,YAAAA,OAAO,EAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX,WAAd;AACJ;;AAEA;AACI;AAZR;AAcH;;;;;;AAIL,eAAeV,UAAf","sourcesContent":["import Stock from \"../stock/Stock\";\r\nimport NewUser from \"../newUser/NewUser\";\r\n\r\nclass Validators {\r\n\r\n    static isDefined(value) {\r\n        /*\r\n        Check if value is defined\r\n        :param value: your variable\r\n        :return: True if value is defined, False if not\r\n        */\r\n\r\n        return (value == \"undefined\" || value == null) ? false : true;\r\n    \r\n    }\r\n\r\n    static fields_not_empty(array) {\r\n        /*\r\n        Check if fields are not empty\r\n        :param array: array of values\r\n        :return: True if values of array's key is not empty, Array of keys where values are empty\r\n        */\r\n\r\n        let errors = []\r\n        for (var key in array) {\r\n            if (!this.isDefined(array[key]) || array[key] === \"\")\r\n                errors.push(key);\r\n        }\r\n\r\n        return (errors.length === 0) ?  true :  errors;\r\n    \r\n    }\r\n\r\n     static display(menu) {\r\n        switch (menu) {\r\n            case \"vente\":\r\n                this.setState({display : <Vente />});\r\n            break;\r\n            case \"stock\":\r\n                this.setState({display : <Stock />});\r\n            break;\r\n            case \"user\":\r\n                this.setState({display : <NewUser />});\r\n            break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Validators;"]},"metadata":{},"sourceType":"module"}